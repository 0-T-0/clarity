"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/*
 * Copyright (c) 2016 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
var core_1 = require("@angular/core");
var tabs_1 = require("./tabs");
var TabLink = (function () {
    function TabLink(tabs) {
        this.tabs = tabs;
        this.active = false;
    }
    TabLink.prototype.onClick = function () {
        this.tabs.selectTab(this);
        return false; // so that browser doesn't navigate to the href of the anchor tag
    };
    __decorate([
        core_1.Input("clrTabLinkActive"), 
        __metadata('design:type', Boolean)
    ], TabLink.prototype, "active", void 0);
    __decorate([
        core_1.Input("clrTabLinkId"), 
        __metadata('design:type', String)
    ], TabLink.prototype, "id", void 0);
    TabLink = __decorate([
        core_1.Component({
            selector: "clr-tab-link",
            template: "\n      <!--\n        ~ Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n        ~ This software is released under MIT license.\n        ~ The full license information can be found in LICENSE in the root directory of this project.\n        -->\n\n      <button class=\"btn btn-link nav-link\" (click)=\"onClick()\" type=\"button\">\n          <ng-content></ng-content>\n      </button>\n    ",
            host: {
                "[id]": "id",
                "[attr.aria-selected]": "active",
                "[attr.aria-controls]": "ariaControls",
                "role": "presentation",
                "[class.nav-item]": "true",
                "[class.active]": "active"
            }
        }), 
        __metadata('design:paramtypes', [tabs_1.Tabs])
    ], TabLink);
    return TabLink;
}());
exports.TabLink = TabLink;
