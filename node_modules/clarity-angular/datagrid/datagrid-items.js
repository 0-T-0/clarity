"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/*
 * Copyright (c) 2016 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
var core_1 = require("@angular/core");
var items_1 = require("./providers/items");
var DatagridItems = (function () {
    function DatagridItems(template, _differs, _changeDetector, _items) {
        this.template = template;
        this._differs = _differs;
        this._changeDetector = _changeDetector;
        this._items = _items;
        _items.smartenUp();
    }
    Object.defineProperty(DatagridItems.prototype, "items", {
        set: function (rawItems) {
            this._rawItems = rawItems;
            if (rawItems) {
                this._differ = this._differs.find(rawItems).create(this._changeDetector, this.trackBy);
            }
        },
        enumerable: true,
        configurable: true
    });
    DatagridItems.prototype.ngDoCheck = function () {
        if (this._differ) {
            var changes = this._differ.diff(this._rawItems);
            if (changes) {
                // TODO: not very efficient right now,
                // but premature optimization is the root of all evil.
                this._items.all = this._rawItems;
            }
        }
    };
    __decorate([
        core_1.Input("clrDgItemsOf"), 
        __metadata('design:type', Array), 
        __metadata('design:paramtypes', [Array])
    ], DatagridItems.prototype, "items", null);
    __decorate([
        core_1.Input("clrDgItemsTrackBy"), 
        __metadata('design:type', Function)
    ], DatagridItems.prototype, "trackBy", void 0);
    DatagridItems = __decorate([
        core_1.Directive({
            selector: "[clrDgItems][clrDgItemsOf]",
        }), 
        __metadata('design:paramtypes', [core_1.TemplateRef, core_1.IterableDiffers, core_1.ChangeDetectorRef, items_1.Items])
    ], DatagridItems);
    return DatagridItems;
}());
exports.DatagridItems = DatagridItems;
