"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var selection_1 = require("./providers/selection");
var DatagridRow = (function () {
    function DatagridRow(selection) {
        this.selection = selection;
    }
    Object.defineProperty(DatagridRow.prototype, "selected", {
        /**
         * Indicates if the row is selected
         */
        get: function () {
            return this.selection.isSelected(this.item);
        },
        set: function (value) {
            this.selection.setSelected(this.item, value);
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input("clrDgItem"), 
        __metadata('design:type', Object)
    ], DatagridRow.prototype, "item", void 0);
    DatagridRow = __decorate([
        core_1.Component({
            selector: "clr-dg-row",
            template: "\n        <clr-dg-cell *ngIf=\"selection.selectable\" class=\"datagrid-select\">\n            <clr-checkbox [(ngModel)]=\"selected\"></clr-checkbox>\n        </clr-dg-cell>\n        <ng-content></ng-content>\n    ",
            host: {
                "[class.datagrid-row]": "true",
                "[class.datagrid-selected]": "selected"
            }
        }), 
        __metadata('design:paramtypes', [selection_1.Selection])
    ], DatagridRow);
    return DatagridRow;
}());
exports.DatagridRow = DatagridRow;
